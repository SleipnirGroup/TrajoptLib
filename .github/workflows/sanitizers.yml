name: Sanitizers

on: [pull_request, push]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    timeout-minutes: 10
    strategy:
      fail-fast: false
      matrix:
        include:
          - sanitizer-name: asan with sleipnir
            cmake-args: "-DCMAKE_BUILD_TYPE=Asan"
            optimizer_backend: sleipnir
            os: ubuntu-24.04
          - sanitizer-name: tsan
            cmake-args: "-DCMAKE_BUILD_TYPE=Tsan"
            optimizer_backend: sleipnir
            os: ubuntu-24.04
          - sanitizer-name: ubsan with sleipnir
            cmake-args: "-DCMAKE_BUILD_TYPE=Ubsan"
            optimizer_backend: sleipnir
            os: ubuntu-24.04
          - sanitizer-name: asan with casadi
            cmake-args: "-DCMAKE_BUILD_TYPE=Asan"
            optimizer_backend: casadi
            os: ubuntu-24.04
          - sanitizer-name: tsan with casadi
            cmake-args: "-DCMAKE_BUILD_TYPE=Tsan"
            optimizer_backend: casadi
            os: ubuntu-24.04
          - sanitizer-name: ubsan with casadi
            cmake-args: "-DCMAKE_BUILD_TYPE=Ubsan"
            optimizer_backend: casadi
            os: ubuntu-24.04

    name: "${{ matrix.sanitizer-name }}"
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4

      - name: Make GCC 14 the default toolchain (Linux)
        run: |
          sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 200
          sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-14 200

      - run: cmake -B build -S . -DBUILD_EXAMPLES=ON ${{ matrix.cmake-args }} -DOPTIMIZER_BACKEND=${{ matrix.optimizer_backend }}
      - run: cmake --build build --config RelWithDebInfo --parallel $(nproc)
      - run: ctest --test-dir build -C RelWithDebInfo --output-on-failure
