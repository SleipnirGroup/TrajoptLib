Interval Set 1d:
    format_string =
        if exact:
            "= {lower}"
        else:
            "∈ [{lower}, {upper}]"
    violation_string = "= {scalar}"

Rectangular Set 2d:
    format_string = "x {xBound}, y {yBound}""
    voilation_string =
        if xBound violated:
            "x {xBound violation_string}"
        else if yBound violated:
            "y {yBound violation_string}"

Linear Set 2d:
    format_string = "polar line: θ = {theta}"
    violation_string = "(r, θ) = ({hypot(xComp, yComp)}, {atan2(yComp, xComp)}"

Cone Set 2d:
    format_string = "cone: θ {thetaBound}"
    violation_string = "(r, θ) = ({hypot(xComp, yComp)}, {atan2(yComp, xComp)}"

Elliptical Set 2d:
    format_string = "<shape>: <direction>, rₓ = {xRadius}, rᵧ = {yRadius}"
        <shape> = circle, ellipse
        <direction> = inside, centered, outside
    violation_string = "(x, y) = ({xComp}, {yComp})"

Set 2d:
    format_string = "2d {set2d}"
    violation_string = "{set2d violation_string}

HeadingConstraint:
    format_string = "heading {headingBound}"
    violation_string = "heading {headingBound violation_string}"

TranslationConstraint:
    format_string = "translation {translationBound}"
    violation_string = "translation {translationBound violation_string}"

PoseConstraint:
    format_string = "{translationBound}, {headingBound}"
    violation_string =
        if heading violated: "{heading violation_string}"
        else if translation violated: "{translation violation_string}"

VelocityHolonomicConstraint:
    format_string =
    "constraint (velocity {velocityBound}) violated: velocity = ({velocityX}, {velocityY})"

AngularVelocityHolonmicConstraint:
    format_string = "angular velocity {angularVelocityBound}"
    violation_string = "

Constraint:
    format_string = "constraint: {constraint}"
    violation_string = "({constraint}) violated: {constraint violation_string}"


Other ways of formatting/examples:

"translation constraint: position x ∈ [1, 2], y ∈ [1, 2]" applied to waypoint index 0 violated: position x = 6 is outside the interval [1, 2].
translation constraint applied to segment index 0 violated:

position x of 3 is outside bound [{}, {}]

Set 1d:
    Interval Set 1d:
        if lower == upper:
            "= {lower}"
        else:
            "∈ [{lower}, {upper}]"

Set 2d:


    Rectangular Set 2d:
        "x-component {xBound}, y-component {yBound}""

    Linear Set 2d:
        (x-component, y-component) must be on the polar line θ = {theta}
    Cone Set 2d:
        (x-component, y-component) must be within the polar cone r ≥ 0, {} ≤ θ ≤ {}

    Elliptical Set 2d:
        "(x-component, y-component) must be <direction> <shape>"
        <direction> =
            if inside:
                "on or within"
            else if centered:
                "on"
            else if outside:
                "on or outside"
        <shape> =
            if circular:
                "a circle of radius = {xRadius}"
            else:
                "an ellipse of rₓ = {xRadius}, rᵧ = {yRadius}"


Constraint:
    HeadingConstraint:
        "constraint heading {headingBound} violated: theta = {theta}"
    TranslationConstraint:
    PoseConstraint:


heading constraint: θ
